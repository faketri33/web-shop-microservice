server.port=8100

spring.main.banner-mode=off
spring.output.ansi.enabled=ALWAYS

spring.application.name=catalog-service

# ===============================
# = Spring Security OAuth2 with Keycloak
# ===============================
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KC_URL}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KC_URL_JWT_SET}

spring.security.oauth2.client.provider.keycloak.issuer-uri=${KC_URL}
spring.security.oauth2.client.provider.keycloak.user-name-attribute=${KC_NAME_ATTRIBUTE}
spring.security.oauth2.client.registration.keycloak.client-id=${KC_CLIENT_ID}
spring.security.oauth2.client.registration.keycloak.client-secret=${KC_SECRET}
spring.security.oauth2.client.registration.keycloak.scope=openid
# ===============================
# = EUREKA
# ===============================
eureka.client.service-url.defaultZone=${EUREKA_URL}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
# ===============================
# = DATA SOURCE
# ===============================
spring.data.elasticsearch.client.type=reactive
spring.data.elasticsearch.client.endpoints=${ELASTIC_URL}

# =========================================
# = KAFKA
# =========================================
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.group-id=${KAFKA_GROUP_ID}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# =========================================
# = Redis
# =========================================
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.timeout=60000

minio.endpoint=${MINIO_URL}
minio.access-key=${MINIO_ACCESS_KEY}
minio.secret-key=${MINIO_SECRET_KEY}
minio.region=${MINIO_REGION}
minio.bucket=${BUCKET}